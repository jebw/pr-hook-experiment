name: Deploy PR
on: [ issue_comment ]
env:
  TRIGGER_KEYWORD: DEPLOY
jobs:
  check_comment:
    name: Check comment
    runs-on: ubuntu-20.04
    steps:
      - name: Check comment
        run: |-
          echo ISSUE COMMENTED AT $(date)

      - name: Event action check
        id: eventcheck
        run: |-
          EVENT_ACTION=$(jq -r .action $GITHUB_EVENT_PATH)

          if [ "x$EVENT_ACTION" = "xcreated" ]; then
            echo ::set-output name=created::true
          fi

      - name: Check for keyword
        if: steps.eventcheck.outputs.created
        id: keyword
        run: |-
          COMMENT=$(jq -r .comment.body $GITHUB_EVENT_PATH)

          if [ "x$COMMENT" = "x$TRIGGER_KEYWORD" ]; then
            echo ::set-output name=match::true
          fi

      - name: Fetch Pull Request data
        if: steps.keyword.outputs.match
        run: |-
          ISSUE_URL=$(jq -r .comment.issue_url)
          echo "ISSUE URL = $ISSUE_URL"


          PR_URL=$(jq -r .comment.issue_url | sed "s?/issues/?/pulls/?")
          echo "PR_URL = '$PR_URL'"

          curl \
            -H "Authorization: token ${{ github.token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -o pull_request.json
            $PR_URL

      - name: Set branch and SHA
        if: steps.keyword.outputs.match
        run: |-
          cat pull_request.json

      - name: Extract comments URL
        id: commentsurl
        if: steps.keyword.outputs.match
        run: |-
          COMMENTS_URL=$(jq -r .issue.comments_url $GITHUB_EVENT_PATH)
          NOW=$(date)

          curl -X POST \
            -H "Authorization: token ${{ github.token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            $COMMENTS_URL --data '{"body": "Released at $NOW"}'

